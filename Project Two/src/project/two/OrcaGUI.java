package project.two;

import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;

import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JSpinner.DefaultEditor;

/**
 *
 * @author Kevin
 */
public class OrcaGUI extends javax.swing.JFrame
{

    private final double MAX_COSTS = 300.00;

    private DateFormat dateFormat = new SimpleDateFormat("MM/dd/yy");
    private DateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
    private DecimalFormat twoDecimal = new DecimalFormat("$#,##0.00");

    private FileReader freader;
    private BufferedReader inputFile;

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: OrcaGUI
     * @Title: Default Constructor
     *
     * @Description: Initializes and runs the interface
     *
     * @Input: n/a
     * @Output: Form
     * @Parameters: n/a
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls:
     * <br>initComponents(); Initializes the components
     * <br>clear(); Sets the form to default values and focus
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Interface and Methods created
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    public OrcaGUI()
    {
        initComponents();
        //set default position
        this.setLocationRelativeTo(null);
        //set default button
        this.getRootPane().setDefaultButton(calculateJButton);
        //set icon
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src//POS Icon.png"));
        //remove unwanted spinner interaction
        ((DefaultEditor) nightsJSpinner.getEditor()).getTextField().setEditable(false);

        clear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        roomsGroup = new javax.swing.ButtonGroup();
        logoJLabel = new javax.swing.JLabel();
        companyJLabel = new javax.swing.JLabel();
        dateJLabel = new javax.swing.JLabel();
        dateJTextField = new javax.swing.JTextField();
        timeJLabel = new javax.swing.JLabel();
        timeJTextField = new javax.swing.JTextField();
        infoJPanel = new javax.swing.JPanel();
        customerJLabel = new javax.swing.JLabel();
        customerJComboBox = new javax.swing.JComboBox<>();
        roomJPanel = new javax.swing.JPanel();
        nightsJLabel = new javax.swing.JLabel();
        nightsJSpinner = new javax.swing.JSpinner();
        paradiseJRadioButton = new javax.swing.JRadioButton();
        atlantisJRadioButton = new javax.swing.JRadioButton();
        orcasJRadioButton = new javax.swing.JRadioButton();
        managerJCheckBox = new javax.swing.JCheckBox();
        chargesJPanel = new javax.swing.JPanel();
        mealsJLabel = new javax.swing.JLabel();
        mealsJTextField = new javax.swing.JTextField();
        wifiJLabel = new javax.swing.JLabel();
        wifiJTextField = new javax.swing.JTextField();
        miscJLabel = new javax.swing.JLabel();
        miscJTextField = new javax.swing.JTextField();
        calculateJButton = new javax.swing.JButton();
        clearJButton = new javax.swing.JButton();
        printJButton = new javax.swing.JButton();
        exitJButton = new javax.swing.JButton();
        receiptJScrollPane = new javax.swing.JScrollPane();
        receiptJTextArea = new javax.swing.JTextArea();
        mainJMenuBar = new javax.swing.JMenuBar();
        fileJMenu = new javax.swing.JMenu();
        newCustJMenuItem = new javax.swing.JMenuItem();
        clearJMenuItem = new javax.swing.JMenuItem();
        printJMenuItem = new javax.swing.JMenuItem();
        exitJMenuItem = new javax.swing.JMenuItem();
        roomsJMenu = new javax.swing.JMenu();
        paradiseJMenuItem = new javax.swing.JMenuItem();
        atlantisJMenuItem = new javax.swing.JMenuItem();
        orcasJMenuItem = new javax.swing.JMenuItem();
        helpJMenu = new javax.swing.JMenu();
        instructionsJMenuItem = new javax.swing.JMenuItem();
        aboutJMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Orcas B&B POS");
        setName("OrcaGUI"); // NOI18N
        setResizable(false);

        logoJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Island Image Icon 2.jpg"))); // NOI18N

        companyJLabel.setFont(new java.awt.Font("Bradley Hand ITC", 1, 36)); // NOI18N
        companyJLabel.setText("Orcas B&B");

        dateJLabel.setBackground(new java.awt.Color(153, 204, 255));
        dateJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dateJLabel.setText("Date:");
        dateJLabel.setToolTipText("Today's Date");

        dateJTextField.setBackground(new java.awt.Color(153, 204, 255));
        dateJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dateJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        dateJTextField.setToolTipText("Today's Date");
        dateJTextField.setEnabled(false);

        timeJLabel.setBackground(new java.awt.Color(153, 204, 255));
        timeJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        timeJLabel.setText("Time:");
        timeJLabel.setToolTipText("Time Transaction Began");

        timeJTextField.setBackground(new java.awt.Color(153, 204, 255));
        timeJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        timeJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        timeJTextField.setToolTipText("Time Transaction Began");
        timeJTextField.setEnabled(false);

        infoJPanel.setBackground(new java.awt.Color(153, 204, 255));
        infoJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Customer Information"));
        infoJPanel.setToolTipText("");

        customerJLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        customerJLabel.setText("Customer:");
        customerJLabel.setToolTipText("Please Select a Customer from the list");

        customerJComboBox.setToolTipText("Please Select a Customer from the list");

        javax.swing.GroupLayout infoJPanelLayout = new javax.swing.GroupLayout(infoJPanel);
        infoJPanel.setLayout(infoJPanelLayout);
        infoJPanelLayout.setHorizontalGroup(
            infoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(customerJLabel)
                .addGap(18, 18, 18)
                .addComponent(customerJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        infoJPanelLayout.setVerticalGroup(
            infoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoJPanelLayout.createSequentialGroup()
                .addGroup(infoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerJLabel)
                    .addComponent(customerJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        roomJPanel.setBackground(new java.awt.Color(153, 204, 255));
        roomJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Room Information"));
        roomJPanel.setToolTipText("Costs for the room itself");

        nightsJLabel.setDisplayedMnemonic('N');
        nightsJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nightsJLabel.setText("Nights:");
        nightsJLabel.setToolTipText("How many night was the customer with us?");

        nightsJSpinner.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nightsJSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 14, 1));
        nightsJSpinner.setToolTipText("How many night was the customer with us?");
        nightsJSpinner.setFocusable(false);

        roomsGroup.add(paradiseJRadioButton);
        paradiseJRadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        paradiseJRadioButton.setMnemonic('e');
        paradiseJRadioButton.setText("Paradise");
        paradiseJRadioButton.setToolTipText("$135 a night; 2 double beds, 1/2 bath, partial view");

        roomsGroup.add(atlantisJRadioButton);
        atlantisJRadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        atlantisJRadioButton.setMnemonic('t');
        atlantisJRadioButton.setText("Atlantis");
        atlantisJRadioButton.setToolTipText("$185 a night; 2 queen beds, 1/2 bath, partial view");

        roomsGroup.add(orcasJRadioButton);
        orcasJRadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        orcasJRadioButton.setMnemonic('O');
        orcasJRadioButton.setText("Orcas");
        orcasJRadioButton.setToolTipText("$235 a night; 1 king size bed, full bath, wrap around balcony, full ocean view");

        managerJCheckBox.setText("Manager's Special Discount");
        managerJCheckBox.setToolTipText("A special 10% discount on room charges, to be applied by Managers ONLY");

        javax.swing.GroupLayout roomJPanelLayout = new javax.swing.GroupLayout(roomJPanel);
        roomJPanel.setLayout(roomJPanelLayout);
        roomJPanelLayout.setHorizontalGroup(
            roomJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roomJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nightsJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nightsJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
            .addGroup(roomJPanelLayout.createSequentialGroup()
                .addGroup(roomJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomJPanelLayout.createSequentialGroup()
                        .addComponent(paradiseJRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atlantisJRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(orcasJRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(roomJPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(managerJCheckBox)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        roomJPanelLayout.setVerticalGroup(
            roomJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomJPanelLayout.createSequentialGroup()
                .addGroup(roomJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nightsJLabel)
                    .addComponent(nightsJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(roomJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paradiseJRadioButton)
                    .addComponent(atlantisJRadioButton)
                    .addComponent(orcasJRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(managerJCheckBox)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        chargesJPanel.setBackground(new java.awt.Color(153, 204, 255));
        chargesJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Additional Charges"));
        chargesJPanel.setToolTipText("Various expenses");

        mealsJLabel.setDisplayedMnemonic('S');
        mealsJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mealsJLabel.setText("Special Meals:");
        mealsJLabel.setToolTipText("Charges for custom orders (including room service)");

        mealsJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mealsJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        mealsJTextField.setToolTipText("Charges for custom orders (including room service)");

        wifiJLabel.setDisplayedMnemonic('I');
        wifiJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        wifiJLabel.setText("Internet Wi-Fi:");
        wifiJLabel.setToolTipText("Charges for Wi-Fi usage");

        wifiJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        wifiJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        wifiJTextField.setToolTipText("Charges for Wi-Fi usage");

        miscJLabel.setDisplayedMnemonic('M');
        miscJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        miscJLabel.setText("Miscellaneous:");
        miscJLabel.setToolTipText("Uncategorized charges");

        miscJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        miscJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        miscJTextField.setToolTipText("Uncategorized charges");

        javax.swing.GroupLayout chargesJPanelLayout = new javax.swing.GroupLayout(chargesJPanel);
        chargesJPanel.setLayout(chargesJPanelLayout);
        chargesJPanelLayout.setHorizontalGroup(
            chargesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chargesJPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(chargesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mealsJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(wifiJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(miscJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(chargesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(wifiJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(mealsJTextField)
                    .addComponent(miscJTextField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        chargesJPanelLayout.setVerticalGroup(
            chargesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chargesJPanelLayout.createSequentialGroup()
                .addGroup(chargesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mealsJLabel)
                    .addComponent(mealsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(chargesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wifiJLabel)
                    .addComponent(wifiJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(chargesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(miscJLabel)
                    .addComponent(miscJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        calculateJButton.setBackground(new java.awt.Color(153, 204, 255));
        calculateJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        calculateJButton.setMnemonic('l');
        calculateJButton.setText("Calculate");
        calculateJButton.setToolTipText("Tally Room costs and other charges into an itemized bill");
        calculateJButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                calculateJButtonActionPerformed(evt);
            }
        });

        clearJButton.setBackground(new java.awt.Color(153, 204, 255));
        clearJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clearJButton.setMnemonic('C');
        clearJButton.setText("Clear");
        clearJButton.setToolTipText("Resets the form for a new use");
        clearJButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                clearJButtonActionPerformed(evt);
            }
        });

        printJButton.setBackground(new java.awt.Color(153, 204, 255));
        printJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        printJButton.setMnemonic('P');
        printJButton.setText("Print");
        printJButton.setToolTipText("Print the customer's receipt");
        printJButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                printJButtonActionPerformed(evt);
            }
        });

        exitJButton.setBackground(new java.awt.Color(153, 204, 255));
        exitJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        exitJButton.setMnemonic('x');
        exitJButton.setText("Exit");
        exitJButton.setToolTipText("Close this window");
        exitJButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exitJButtonActionPerformed(evt);
            }
        });

        receiptJScrollPane.setVerifyInputWhenFocusTarget(false);

        receiptJTextArea.setEditable(false);
        receiptJTextArea.setColumns(20);
        receiptJTextArea.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        receiptJTextArea.setRows(5);
        receiptJTextArea.setToolTipText("Customer Receipt");
        receiptJTextArea.setAutoscrolls(false);
        receiptJScrollPane.setViewportView(receiptJTextArea);

        fileJMenu.setMnemonic('F');
        fileJMenu.setText("File");

        newCustJMenuItem.setMnemonic('A');
        newCustJMenuItem.setText("Add New Customer");
        newCustJMenuItem.setToolTipText("Add a new customer to the potential guest list");
        newCustJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                newCustJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(newCustJMenuItem);

        clearJMenuItem.setMnemonic('C');
        clearJMenuItem.setText("Clear");
        clearJMenuItem.setToolTipText("Resets the form for a new use");
        clearJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                clearJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(clearJMenuItem);

        printJMenuItem.setMnemonic('P');
        printJMenuItem.setText("Print");
        printJMenuItem.setToolTipText("Prints the entire window");
        printJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                printJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(printJMenuItem);

        exitJMenuItem.setMnemonic('x');
        exitJMenuItem.setText("Exit");
        exitJMenuItem.setToolTipText("Close this window");
        exitJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exitJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(exitJMenuItem);

        mainJMenuBar.add(fileJMenu);

        roomsJMenu.setMnemonic('R');
        roomsJMenu.setText("Rooms");

        paradiseJMenuItem.setText("Paradise");
        paradiseJMenuItem.setToolTipText("$135 a night; 2 double beds, 1/2 bath, partial view");
        paradiseJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                paradiseJMenuItemActionPerformed(evt);
            }
        });
        roomsJMenu.add(paradiseJMenuItem);

        atlantisJMenuItem.setText("Atlantis");
        atlantisJMenuItem.setToolTipText("$185 a night; 2 queen beds, 1/2 bath, partial view");
        atlantisJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                atlantisJMenuItemActionPerformed(evt);
            }
        });
        roomsJMenu.add(atlantisJMenuItem);

        orcasJMenuItem.setText("Orcas");
        orcasJMenuItem.setToolTipText("$235 a night; 1 king size bed, full bath, wrap around balcony, full ocean view");
        orcasJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                orcasJMenuItemActionPerformed(evt);
            }
        });
        roomsJMenu.add(orcasJMenuItem);

        mainJMenuBar.add(roomsJMenu);

        helpJMenu.setMnemonic('H');
        helpJMenu.setText("Help");

        instructionsJMenuItem.setText("Instructions");
        instructionsJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                instructionsJMenuItemActionPerformed(evt);
            }
        });
        helpJMenu.add(instructionsJMenuItem);

        aboutJMenuItem.setText("About Orcas B&B POS");
        aboutJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                aboutJMenuItemActionPerformed(evt);
            }
        });
        helpJMenu.add(aboutJMenuItem);

        mainJMenuBar.add(helpJMenu);

        setJMenuBar(mainJMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(logoJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(companyJLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(timeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(timeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(dateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(infoJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(roomJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chargesJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(receiptJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calculateJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clearJButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(printJButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exitJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(companyJLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(dateJLabel)
                                    .addComponent(dateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(timeJLabel)
                                    .addComponent(timeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(infoJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(logoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(roomJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chargesJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(calculateJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(printJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(receiptJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: calculateJButtonActionPerformed
     * @Title: btnCalculate
     *
     * @Description: Initializes and runs the interface
     *
     * @Input:
     * <br>managerJCheckBox Determines if discounts is to be applied
     * <br>mealsJTextField Captures value of meals
     * <br>wifiJTextField Captures cost of wifi
     * <br>miscJTextField Captures other miscellaneous costs
     * <br>paradiseJRadioButton, atlantisJRadioButton, orcasJRadioButton
     * Determines the room
     * <br>nightsJSpinner Brings in the number of nights the customer stayed
     * <br>customerJComboBox Chooses which customer this receipt is for
     * @Output:
     * <br>receiptJTextArea Printable area to store receipt
     * <br>JOptionPane Messagebox for errors
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls:
     * <br>Invoice() Object constructor
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void calculateJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_calculateJButtonActionPerformed
    {//GEN-HEADEREND:event_calculateJButtonActionPerformed
        //Declare components
        StringBuffer receiptMaker = new StringBuffer();
        Invoice invoice;
        String msg = "Exception Handled";
        double meals = 0.0;
        double wifi = 0.0;
        double misc = 0.0;
        short skips = 0;
        boolean discount = managerJCheckBox.isSelected();
        boolean booMeals = false, booWifi = false, booMisc = false;

        //Calls and declares an enumerated value
        Invoice.rooms room;

        try
        {
            if (!mealsJTextField.getText().isEmpty()) //Checks if input is in box
            {
                //prepares a message in case of error
                msg = "Please pick a positive number below " + twoDecimal.format(MAX_COSTS)
                        + " for '" + mealsJLabel.getText().replace(':', '\'');
                try
                {
                    booMeals = true;
                    meals = Double.parseDouble(mealsJTextField.getText());
                } catch (NumberFormatException exp)
                {
                    //Handles thrown exception
                    JOptionPane.showMessageDialog(null, msg, "Input Error",
                            JOptionPane.ERROR_MESSAGE);
                    //Sets invalid inputs to allow user correction
                    mealsJTextField.requestFocus();
                    mealsJTextField.selectAll();
                }
                if (meals < 0 || meals > MAX_COSTS)
                {
                    //Verifies valid numerical input
                    mealsJTextField.requestFocus();
                    mealsJTextField.selectAll();
                    throw new ArithmeticException();
                }
            }
            if (!wifiJTextField.getText().isEmpty())
            {
                //See mealsJTextField Validation for additional information
                msg = "Please pick a positive number below " + twoDecimal.format(MAX_COSTS)
                        + " for '" + wifiJLabel.getText().replace(':', '\'');
                try
                {
                    booWifi = true;
                    wifi = Double.parseDouble(wifiJTextField.getText());
                } catch (NumberFormatException exp)
                {
                    //Handles thrown exception
                    JOptionPane.showMessageDialog(null, msg, "Input Error",
                            JOptionPane.ERROR_MESSAGE);
                    wifiJTextField.requestFocus();
                    wifiJTextField.selectAll();
                }
                if (wifi < 0 || wifi > MAX_COSTS)
                {
                    wifiJTextField.requestFocus();
                    wifiJTextField.selectAll();
                    throw new ArithmeticException();
                }
            }
            if (!miscJTextField.getText().isEmpty())
            {
                //See mealsJTextField Validation for additional information
                msg = "Please pick a positive number below " + twoDecimal.format(MAX_COSTS)
                        + " for '" + miscJLabel.getText().replace(':', '\'');
                try
                {
                    booMisc = true;
                    misc = Double.parseDouble(miscJTextField.getText());
                } catch (NumberFormatException exp)
                {
                    //Handles thrown exception
                    JOptionPane.showMessageDialog(null, msg, "Input Error",
                            JOptionPane.ERROR_MESSAGE);
                    miscJTextField.requestFocus();
                    miscJTextField.selectAll();
                }
                if (misc < 0 || misc > MAX_COSTS)
                {
                    miscJTextField.requestFocus();
                    miscJTextField.selectAll();
                    throw new ArithmeticException();
                }
            }

            //Checks radio buttons to set enumeration
            if (paradiseJRadioButton.isSelected())
            {
                room = Invoice.rooms.paradise;
            } else if (atlantisJRadioButton.isSelected())
            {
                room = Invoice.rooms.atlantis;
            } else if (orcasJRadioButton.isSelected())
            {
                room = Invoice.rooms.orcas;
            } else
            {
                room = Invoice.rooms.paradise;
            }

            //Instantiates the Invoice object with gathered, and verified, data
            invoice = new Invoice(meals, wifi, misc,
                    Byte.parseByte(nightsJSpinner.getValue().toString()), discount, room);

            //Formats and adds strings to a buffer for printing to a text area
            receiptMaker.append(customerJComboBox.getSelectedItem().toString()
                    + "'s Itemized Bill\n");
            receiptMaker.append(padSpaces("Items", "Charges") + "\n");
            receiptMaker.append(padSpaces("~~~~~", "~~~~~~~") + "\n");
            receiptMaker.append(padSpaces("Room Charges:",
                    twoDecimal.format(invoice.getRoomCost())) + "\n");

            //Checks if information is necessary and builds accordingly
            if (discount)
            {
                receiptMaker.append(padSpaces("Manager Discretion:",
                        twoDecimal.format(invoice.getDiscount())) + "\n");
            } else
            {
                skips++;
            }

            if (booMeals)
            {
                receiptMaker.append(padSpaces("Special Meals:",
                        twoDecimal.format(meals)) + "\n");
            } else
            {
                skips++;
            }

            if (booWifi)
            {
                receiptMaker.append(padSpaces("Internet Wi-Fi:",
                        twoDecimal.format(wifi)) + "\n");
            } else
            {
                skips++;
            }

            if (booMisc)
            {
                receiptMaker.append(padSpaces("Miscelaneous:",
                        twoDecimal.format(misc)) + "\n");
            } else
            {
                skips++;
            }

            //Inputs place holder gaps for unessecary or omitted data
            for (int i = 0; i < skips - 1; i++)
            {
                receiptMaker.append("\n");
            }

            //Places final sections and calculated data into buffed
            receiptMaker.append(padSpaces("Subtotal:",
                    twoDecimal.format(invoice.calcTotal())) + "\n");
            receiptMaker.append(padSpaces("Taxes (8%):",
                    twoDecimal.format(invoice.calcTotal() * invoice.getTAX())) + "\n");
            receiptMaker.append("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
            receiptMaker.append(padSpaces("Total:", twoDecimal.format(invoice.calcTotal()
                    + (invoice.calcTotal() * invoice.getTAX()))));

            //Prints the buffer to the text area
            receiptJTextArea.setText(receiptMaker.toString());
        } catch (ArithmeticException exp)
        {
            //Handles thrown exception
            JOptionPane.showMessageDialog(null, msg, "Out-Of-Range Error",
                    JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_calculateJButtonActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: exitJButtonActionPerformed
     * @Title: btnExit
     *
     * @Description: Exits the Program
     *
     * @Input:n/a
     * @Output:n/a
     *
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls: System.exit()
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void exitJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exitJButtonActionPerformed
    {//GEN-HEADEREND:event_exitJButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitJButtonActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: exitJMenuItemActionPerformed
     * @Title: menuExit
     *
     * @Description: Exits the Program
     *
     * @Input:n/a
     * @Output:n/a
     *
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls: System.exit()
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void exitJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exitJMenuItemActionPerformed
    {//GEN-HEADEREND:event_exitJMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitJMenuItemActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: printJMenuItemActionPerformed
     * @Title: menuPrint
     *
     * @Description: Prints the entire interface
     *
     * @Input:n/a
     * @Output: Printer
     *
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls: PrintUtilities.printComponent() - Prints provided component
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void printJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_printJMenuItemActionPerformed
    {//GEN-HEADEREND:event_printJMenuItemActionPerformed
        PrintUtilities.printComponent(this);
    }//GEN-LAST:event_printJMenuItemActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: printJButtonActionPerformed
     * @Title: btnPrint
     *
     * @Description: Prints the receipt
     *
     * @Input:n/a
     * @Output: Printer
     *
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls: PrintUtilities.printComponent() - Prints provided component
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void printJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_printJButtonActionPerformed
    {//GEN-HEADEREND:event_printJButtonActionPerformed
        PrintUtilities.printComponent(receiptJTextArea);
    }//GEN-LAST:event_printJButtonActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: newCustJMenuItemActionPerformed
     * @Title: New Customer Interface
     *
     * @Description: Calls the form to input a new customer
     *
     * @Input:n/a
     * @Output: new form
     *
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls: InsertCustomerGUI().setVisible() Activates the new form
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void newCustJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_newCustJMenuItemActionPerformed
    {//GEN-HEADEREND:event_newCustJMenuItemActionPerformed
        new InsertCustomerGUI().setVisible(true);
    }//GEN-LAST:event_newCustJMenuItemActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: clearJButtonActionPerformed
     * @Title: btnClear
     *
     * @Description: Sets the form to defaults
     *
     * @Input: n/a
     * @Output: n/a
     *
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls: clear(); -Resets the form to defaults
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void clearJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearJButtonActionPerformed
    {//GEN-HEADEREND:event_clearJButtonActionPerformed
        clear();
    }//GEN-LAST:event_clearJButtonActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: paradiseJMenuItemActionPerformed
     * @Title: menuParadise
     *
     * @Description: Sets the paradise radio button to checked
     *
     * @Input: paradiseJRadioButton
     * @Output: n/a
     *
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls: n/a
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void paradiseJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_paradiseJMenuItemActionPerformed
    {//GEN-HEADEREND:event_paradiseJMenuItemActionPerformed
        paradiseJRadioButton.setSelected(true);
    }//GEN-LAST:event_paradiseJMenuItemActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: atlantisJMenuItemActionPerformed
     * @Title: menuAtlantis
     *
     * @Description: Sets the Atlantis radio button to checked
     *
     * @Input: atlantisJRadioButton
     * @Output: n/a
     *
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls: n/a
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void atlantisJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_atlantisJMenuItemActionPerformed
    {//GEN-HEADEREND:event_atlantisJMenuItemActionPerformed
        atlantisJRadioButton.setSelected(true);
    }//GEN-LAST:event_atlantisJMenuItemActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: orcasJMenuItemActionPerformed
     * @Title: menuOrcas
     *
     * @Description: Sets the orcas radio button to checked
     *
     * @Input: orcasJRadioButton
     * @Output: n/a
     *
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls: n/a
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void orcasJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_orcasJMenuItemActionPerformed
    {//GEN-HEADEREND:event_orcasJMenuItemActionPerformed
        orcasJRadioButton.setSelected(true);
    }//GEN-LAST:event_orcasJMenuItemActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: instructionsJMenuItemActionPerformed
     * @Title: Instructions
     *
     * @Description: Calls the instructions window
     *
     * @Input: n/a
     * @Output: Instructions Window
     *
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls: helpMenu();
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void instructionsJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_instructionsJMenuItemActionPerformed
    {//GEN-HEADEREND:event_instructionsJMenuItemActionPerformed
        helpMenu("Instructions");
    }//GEN-LAST:event_instructionsJMenuItemActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: aboutJMenuItemActionPerformed
     * @Title: About
     *
     * @Description: Calls the about window
     *
     * @Input: n/a
     * @Output: About Window
     *
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls: helpMenu();
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void aboutJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_aboutJMenuItemActionPerformed
    {//GEN-HEADEREND:event_aboutJMenuItemActionPerformed
        helpMenu("About");
    }//GEN-LAST:event_aboutJMenuItemActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: clearJMenuItemActionPerformed
     * @Title: menuClear
     *
     * @Description: Sets the form to defaults
     *
     * @Input: n/a
     * @Output: n/a
     *
     * @Parameters: java.awt.event.ActionEvent evt - Action
     * @Return: n/a
     *
     * @CalledBy: n/a
     * @Calls: clear(); -Resets the form to defaults
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void clearJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearJMenuItemActionPerformed
    {//GEN-HEADEREND:event_clearJMenuItemActionPerformed
        clear();
    }//GEN-LAST:event_clearJMenuItemActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: padSpaces
     * @Title: Padding Spacer
     *
     * @Description: Takes two strings, and sets them to a fixed width
     *
     * @Input: n/a
     * @Output: n/a
     *
     * @Parameters:
     * <br>String first - The first string to be 'placed'
     * <br>String second - The second string to be 'placed'
     * @Return: line - the strings placed into a single set width
     *
     * @CalledBy: btnCalc
     * @Calls: n/a
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private StringBuffer padSpaces(String first, String second)
    {
        //Initializes variables
        final int FIRST_SPACES = 25, SECOND_SPACES = 12;
        StringBuffer line = new StringBuffer();
        int numberSpaces = FIRST_SPACES - first.length();
        int numberSpaces2 = SECOND_SPACES - second.length();

        //Checks the width of the first dection
        for (int i = 0; i < numberSpaces; i++)
        {
            line.append(" ");
        }
        line.append(first);

        //Checks the width of the second section
        for (int j = 0; j < numberSpaces2; j++)
        {
            line.append(" ");
        }
        line.append(second);

        return line;
    }

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: helpMenu
     * @Title: Help Menu Builder
     *
     * @Description: Opens the needed file, pulls the data into the string, and
     * places it into a popup.
     *
     * @Input: n/a
     * @Output: JOptionPane - Puts the information up to the screen
     *
     * @Parameters:
     * <br>String type - Sets file name and window message
     * @Return: n/a
     *
     * @CalledBy: menuInstructions, menuAbout
     * @Calls: n/a
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void helpMenu(String type)
    {
        try
        {
            freader = new FileReader("src//" + type + ".txt");
            inputFile = new BufferedReader(freader);

            // Read the first name from the file.
            String inputLines = inputFile.readLine();
            StringBuffer data = new StringBuffer();

            while (inputLines != null)
            {
                data.append(inputLines + "\n");
                inputLines = inputFile.readLine();
            }

            JOptionPane.showMessageDialog(null, data, type,
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (FileNotFoundException exp) // catch file not found
        {
            exp.printStackTrace();
        } catch (IOException exp) // catch reading error
        {
            exp.printStackTrace();
        }
    }

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: clear()
     * @Title: Clear
     *
     * @Description: Sets the form to the default values
     *
     * @Input: n/a
     * @Output:
     * <br>dateJTextField - Sets to default
     * <br>timeJTextField - Sets to default
     * <br>nightsJSpinner - Sets to default
     * <br>paradiseJRadioButton - Sets to default
     * <br>managerJCheckBox - Sets to default
     * <br>mealsJTextField - Sets to default
     * <br>wifiJTextField - Sets to default
     * <br>miscJTextField - Sets to default
     * <br>receiptJTextArea - Sets to default
     *
     * @Parameters: String type - Sets file name and window message
     * @Return: n/a
     *
     * @CalledBy: menuClear, default constructor, btnClear
     * @Calls: n/a
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void clear()
    {
        //get current date time with Date()
        Date date = new Date();

        //Sets all fields to the desired values
        dateJTextField.setText(dateFormat.format(date));
        timeJTextField.setText(timeFormat.format(date.getTime()));
        loadSpinner();
        nightsJSpinner.setValue(1);
        paradiseJRadioButton.setSelected(true);
        managerJCheckBox.setSelected(false);
        mealsJTextField.setText("");
        wifiJTextField.setText("");
        miscJTextField.setText("");
        receiptJTextArea.setText("");
        nightsJSpinner.requestFocus();
    }

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *
     * @Class: OrcaGUI
     * @File: OrcaGUI.java
     *
     * @author: Kevin Manning
     *
     * @Function: loadSpinner()
     * @Title: Load Spinner
     *
     * @Description: Fills the spinner with the data from the customer file
     *
     * @Input: Customer.txt - file of customer names
     * @Output: customerJComboBox - Fills with data from file
     *
     * @Parameters: String type - Sets file name and window message
     * @Return: n/a
     *
     * @CalledBy: menuClear, default constructor, btnClear
     * @Calls: n/a
     *
     * @Environment: PC, Windows 10, jdk8.0, NetBeans 8.1
     * @Date: 2/18/2016
     * @version 1.0
     * @HistoryLog: 2/18/16 - Built function and called methods
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void loadSpinner()
    {
        try
        {
            freader = new FileReader("src//Customers.txt");
            inputFile = new BufferedReader(freader);

            // Read the first name from the file.
            String customerName = inputFile.readLine();

            //Clears JComboBox to prevent rewriting
            customerJComboBox.removeAllItems();

            // Add customer name to JComboBox
            while (customerName != null)
            {
                customerJComboBox.addItem(customerName);
                customerName = inputFile.readLine();
            }
        } catch (FileNotFoundException exp) // catch file not found
        {
            exp.printStackTrace();
        } catch (IOException exp) // catch reading error
        {
            exp.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(OrcaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(OrcaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(OrcaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(OrcaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new OrcaGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutJMenuItem;
    private javax.swing.JMenuItem atlantisJMenuItem;
    private javax.swing.JRadioButton atlantisJRadioButton;
    private javax.swing.JButton calculateJButton;
    private javax.swing.JPanel chargesJPanel;
    private javax.swing.JButton clearJButton;
    private javax.swing.JMenuItem clearJMenuItem;
    private javax.swing.JLabel companyJLabel;
    private javax.swing.JComboBox<String> customerJComboBox;
    private javax.swing.JLabel customerJLabel;
    private javax.swing.JLabel dateJLabel;
    private javax.swing.JTextField dateJTextField;
    private javax.swing.JButton exitJButton;
    private javax.swing.JMenuItem exitJMenuItem;
    private javax.swing.JMenu fileJMenu;
    private javax.swing.JMenu helpJMenu;
    private javax.swing.JPanel infoJPanel;
    private javax.swing.JMenuItem instructionsJMenuItem;
    private javax.swing.JLabel logoJLabel;
    private javax.swing.JMenuBar mainJMenuBar;
    private javax.swing.JCheckBox managerJCheckBox;
    private javax.swing.JLabel mealsJLabel;
    private javax.swing.JTextField mealsJTextField;
    private javax.swing.JLabel miscJLabel;
    private javax.swing.JTextField miscJTextField;
    private javax.swing.JMenuItem newCustJMenuItem;
    private javax.swing.JLabel nightsJLabel;
    private javax.swing.JSpinner nightsJSpinner;
    private javax.swing.JMenuItem orcasJMenuItem;
    private javax.swing.JRadioButton orcasJRadioButton;
    private javax.swing.JMenuItem paradiseJMenuItem;
    private javax.swing.JRadioButton paradiseJRadioButton;
    private javax.swing.JButton printJButton;
    private javax.swing.JMenuItem printJMenuItem;
    private javax.swing.JScrollPane receiptJScrollPane;
    private javax.swing.JTextArea receiptJTextArea;
    private javax.swing.JPanel roomJPanel;
    private javax.swing.ButtonGroup roomsGroup;
    private javax.swing.JMenu roomsJMenu;
    private javax.swing.JLabel timeJLabel;
    private javax.swing.JTextField timeJTextField;
    private javax.swing.JLabel wifiJLabel;
    private javax.swing.JTextField wifiJTextField;
    // End of variables declaration//GEN-END:variables
}